[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\marku\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\marku\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 63.995301ms
[debug]       Load.loadUnit: defsScala took 0.167799ms
[debug] [Loading] Scanning directory C:\Users\marku\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\marku\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.9927 ms
[debug]           Load.resolveProject(global-plugins) took 22.736701ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\marku\.sbt\1.0\plugins, plugins: List(<none>))) took 41.378001ms
[debug] [Loading] Done in C:\Users\marku\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 52.7014ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1626ms
[debug]     Load.loadUnit(file:/C:/Users/marku/.sbt/1.0/plugins/, ...) took 122.4776ms
[debug]   Load.apply: load took 208.883799ms
[debug]   Load.apply: resolveProjects took 3.1127ms
[debug]   Load.apply: finalTransforms took 37.3223ms
[debug]   Load.apply: config.delegates took 5.8878ms
[debug]   Load.apply: Def.make(settings)... took 231.7454ms
[debug]   Load.apply: structureIndex took 51.9148ms
[debug]   Load.apply: mkStreams took 0.9218ms
[info] loading global plugins from C:\Users\marku\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1337.9549ms
[debug]           Load.loadUnit: plugins took 16.2172ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\marku\Desktop\untitled\p1\project
[debug]             Load.loadUnit: mkEval took 3.6118ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\marku\Desktop\untitled\p1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9343 ms
[info] loading settings for project p1-build from idea.sbt ...
[debug]               Load.resolveProject(p1-build) took 1.541201ms
[debug]             Load.loadTransitive: finalizeProject(Project(id p1-build, base: C:\Users\marku\Desktop\untitled\p1\project, plugins: List(<none>))) took 2.7818ms
[debug] [Loading] Done in C:\Users\marku\Desktop\untitled\p1\project, returning: (p1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1123.606501ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.133299ms
[debug]         Load.loadUnit(file:/C:/Users/marku/Desktop/untitled/p1/project/, ...) took 1143.5261ms
[debug]       Load.apply: load took 1144.3669ms
[debug]       Load.apply: resolveProjects took 0.0615ms
[debug]       Load.apply: finalTransforms took 5.677101ms
[debug]       Load.apply: config.delegates took 0.210599ms
[debug]       Load.apply: Def.make(settings)... took 33.163499ms
[debug]       Load.apply: structureIndex took 15.132ms
[debug]       Load.apply: mkStreams took 0.0015ms
[info] loading project definition from C:\Users\marku\Desktop\untitled\p1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 1904.8931ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\marku\Desktop\untitled\p1
[debug]       Load.loadUnit: mkEval took 0.1564ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\marku\Desktop\untitled\p1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.285 ms
[info] loading settings for project p1 from build.sbt ...
[debug]         Load.resolveProject(p1) took 15.5308ms
[debug]       Load.loadTransitive: finalizeProject(Project(id p1, base: C:\Users\marku\Desktop\untitled\p1, plugins: List(<none>))) took 17.4466ms
[debug] [Loading] Done in C:\Users\marku\Desktop\untitled\p1, returning: (p1)
[debug]     Load.loadUnit: loadedProjectsRaw took 796.682799ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.8402ms
[debug]   Load.loadUnit(file:/C:/Users/marku/Desktop/untitled/p1/, ...) took 2725.000499ms
[debug] Load.apply: load took 2725.976ms
[debug] Load.apply: resolveProjects took 0.0725ms
[debug] Load.apply: finalTransforms took 13.305199ms
[debug] Load.apply: config.delegates took 0.1527ms
[debug] Load.apply: Def.make(settings)... took 26.3458ms
[debug] Load.apply: structureIndex took 12.4453ms
[debug] Load.apply: mkStreams took 0.001701ms
[info] set current project to p1 (in build file:/C:/Users/marku/Desktop/untitled/p1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60577 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60577, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to p1 (in build file:/C:/Users/marku/Desktop/untitled/p1/)
[debug] > Exec(idea-shell, None, None)
